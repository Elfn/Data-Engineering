# gganimate specific bits:
transition_states(
frame,
transition_length = 2,
state_length = 1
) +
ease_aes('sine-in-out')
# Save at gif:
anim_save("288-animated-barplot-transition.gif")
ggplot(data.Races, aes(x=data.Races$`mapdata$Race`, y=data.Races$Frequences, fill=Frequences)) +
geom_bar(stat='identity')+
theme_bw() +
# gganimate specific bits:
transition_states(
frame,
transition_length = 2,
state_length = 1
) +
ease_aes('sine-in-out')
ggplot(data.Races, aes(x=`mapdata$Race`, y=data.Races$Frequences, fill=Frequences)) +
geom_bar(stat='identity')+
theme_bw() +
# gganimate specific bits:
transition_states(
frame,
transition_length = 2,
state_length = 1
) +
ease_aes('sine-in-out')
ggplot(data.Races, aes(x=`mapdata$Race`, y=data.Races$Frequences, fill=Frequences)) +
geom_bar(stat='identity')
ggplot(data.Races, aes(x=`mapdata$Race`, y=data.Races$Frequences, fill=Frequences),main="TT") +
geom_bar(stat='identity')
g <- ggplot(data.Races, aes(data.Races$`mapdata$Race`, data.Races$Frequences))
g + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Frequency of Manufacturers from 'mpg' dataset") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
theme_set(theme_classic())
g <- ggplot(data.Races, aes(data.Races$`mapdata$Race`, data.Races$Frequences))
g + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Frequency of Manufacturers from 'mpg' dataset") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
colnames(data.Races$`mapdata$Race`) <- "Races"
colnames(data.Races$`mapdata$Race`) <- c("Races")
colnames(data.Races) <- c("Races","Frequences")
g <- ggplot(data.Races, aes(Races, Frequences))
g + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Frequency of Manufacturers from 'mpg' dataset") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
g + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Les races regulièrement victimes de meurtres",
subtitle="",
caption="") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
# Les sexes regulièrement victimes
data.Gender <-  mapdata%>% group_by(mapdata$Gender)%>% summarise(Frequences=n())
data.Gender <- data.Gender[order(data.Gender$Frequences,decreasing = TRUE),]
data.Gender
install.packages("forecast")
#install.packages("forecast")
library(forecast)
theme_set(theme_classic())
ggseasonplot(data.Gender) + labs(title="Seasonal plot: International Airline Passengers")
theme_set(theme_bw())
ggplot(data.Gender, aes(x=Races, y=Frequences, label=Races)) +
geom_bar(stat='identity', aes(fill=Frequences), width=.5)  +
scale_fill_manual(name="Mileage",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Normalised mileage from 'mtcars'",
title= "Diverging Bars") +
coord_flip()
data.Gender
colnames(data.Gender) <- c("Gender","Frequences")
data.Gender
data.Gender$Gender <- "Others"
data.Gender
# Frequence de meutres par sexes
data.Gender <-  mapdata%>% group_by(mapdata$Gender)%>% summarise(Frequences=n())
data.Gender <- data.Gender[order(data.Gender$Frequences,decreasing = TRUE),]
colnames(data.Gender) <- c("Gender","Frequences")
data.Gender$Gender[3] <- "Others"
data.Gender
ggplot(data.Gender, aes(x=Gender, y=Frequences, label=Races)) +
geom_bar(stat='identity', aes(fill=Frequences), width=.5)  +
scale_fill_manual(name="Mileage",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Normalised mileage from 'mtcars'",
title= "Diverging Bars") +
coord_flip()
ggplot(data.Gender, aes(x=Gender, y=Frequences, label=Gender)) +
geom_bar(stat='identity', aes(fill=Frequences), width=.5)  +
scale_fill_manual(name="Mileage",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Normalised mileage from 'mtcars'",
title= "Diverging Bars") +
coord_flip()
ggplot(data.Gender, aes(x=Gender, y=Frequences, label=Gender)) +
geom_bar(stat='identity', aes(fill=Frequences), width=.5)  +
labs(subtitle="Normalised mileage from 'mtcars'",
title= "Diverging Bars") +
coord_flip()
ggplot(data.Gender, aes(x=Gender, y=Frequences, label=Gender)) +
geom_bar(stat='identity', aes(fill=Frequences), width=.5)  +
labs(subtitle="",
title= " Frequence de meutres par sexes") +
coord_flip()
theme_set(theme_bw())
ggplot(data.Gender, aes(x=Gender, y=Frequences, label=Gender)) +
geom_bar(stat='identity', aes(fill=Frequences), width=.5)  +
labs(subtitle="",
title= " Frequence de meutres par sexes") +
coord_flip()
# # Les etats ayant un total de morts plus élevé
data.State <-  mapdata%>% group_by(mapdata$state)%>% summarise(Frequences=n())
data.State <- data.State[order(data.State$Frequences,decreasing = TRUE),]
colnames(data.State) <- c("Gender","Frequences")
data.State
# # Top 5 des etats ayant un total de morts plus élevé
data.State <-  mapdata%>% group_by(mapdata$state)%>% summarise(Frequences=n())
data.State <- data.State[order(data.State$Frequences,decreasing = TRUE),]
colnames(data.State) <- c("States","Frequences")
data.State <- head(data.State,n=5)
data.State
library(ggalt)
install.packages("ggalt")
library(ggalt)
theme_set(theme_classic())
gg <- ggplot(data.State, aes(x=States, y=Frequences, group=States)) +
geom_dumbbell(color="#a3c4dc",
size=0.75,
point.colour.l="#0e668b") +
scale_x_continuous(label=percent) +
labs(x=NULL,
y=NULL,
title="Dumbbell Chart",
subtitle="Pct Change: 2013 vs 2014",
caption="Source: https://github.com/hrbrmstr/ggalt") +
theme(plot.title = element_text(hjust=0.5, face="bold"),
plot.background=element_rect(fill="#f7f7f7"),
panel.background=element_rect(fill="#f7f7f7"),
panel.grid.minor=element_blank(),
panel.grid.major.y=element_blank(),
panel.grid.major.x=element_line(),
axis.ticks=element_blank(),
legend.position="top",
panel.border=element_blank())
gg <- ggplot(data.State, aes(x=States, y=Frequences, group=States)) +
geom_dumbbell(color="#a3c4dc",
size=0.75,
point.colour.l="#0e668b") +
scale_x_continuous(label=States) +
labs(x=NULL,
y=NULL,
title="Dumbbell Chart",
subtitle="Pct Change: 2013 vs 2014",
caption="Source: https://github.com/hrbrmstr/ggalt") +
theme(plot.title = element_text(hjust=0.5, face="bold"),
plot.background=element_rect(fill="#f7f7f7"),
panel.background=element_rect(fill="#f7f7f7"),
panel.grid.minor=element_blank(),
panel.grid.major.y=element_blank(),
panel.grid.major.x=element_line(),
axis.ticks=element_blank(),
legend.position="top",
panel.border=element_blank())
gg <- ggplot(data.State, aes(x=States, y=Frequences, group=States)) +
geom_dumbbell(color="#a3c4dc",
size=0.75,
point.colour.l="#0e668b") +
scale_x_continuous(label=data.State$States) +
labs(x=NULL,
y=NULL,
title="Dumbbell Chart",
subtitle="Pct Change: 2013 vs 2014",
caption="Source: https://github.com/hrbrmstr/ggalt") +
theme(plot.title = element_text(hjust=0.5, face="bold"),
plot.background=element_rect(fill="#f7f7f7"),
panel.background=element_rect(fill="#f7f7f7"),
panel.grid.minor=element_blank(),
panel.grid.major.y=element_blank(),
panel.grid.major.x=element_line(),
axis.ticks=element_blank(),
legend.position="top",
panel.border=element_blank())
plot(gg)
g <- ggplot(data.State, aes(x=States,y=Frequences,group=States))
g + geom_density(aes(fill=States), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg",
x="City Mileage",
fill="# Cylinders")
g + geom_density(aes(fill=Frequences), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg",
x="City Mileage",
fill="# Cylinders")
g <- ggplot(data.State, aes(x=States,y=Frequences,group=States))
g + geom_density(aes(fill=Frequences), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg",
x="City Mileage",
fill="# Cylinders")
theme_set(theme_classic())
g <- ggplot(data.State, aes(x=States,y=Frequences,group=States))
g + geom_density(aes(fill=Frequences), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg",
x="City Mileage",
fill="# Cylinders")
data.State
g <- ggplot(data.State, aes(Frequences))
g + geom_density(aes(fill=Frequences), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg",
x="City Mileage",
fill="# Cylinders")
a <- ggplot(wdata, aes(x = States,y = Frequences))
a <- ggplot(data.State, aes(x = States,y = Frequences))
# change fill colors by sex
a + geom_area(aes(fill = Frequences), stat ="bin", alpha=0.6) +
theme_classic()
a <- ggplot(data.State, aes(y = Frequences))
# change fill colors by sex
a + geom_area(aes(fill = Frequences), stat ="bin", alpha=0.6) +
theme_classic()
a <- ggplot(data.State, aes(x = States))
# change fill colors by sex
a + geom_area(aes(fill = Frequences), stat ="bin", alpha=0.6) +
theme_classic()
a <- ggplot(data.State, aes(x = data.State$States))
# change fill colors by sex
a + geom_area(aes(fill = Frequences), stat ="bin", alpha=0.6) +
theme_classic()
plot <- ggplot(data.State,
aes(
x = States,
y = Frequences,
fill = Frequences
)) +
geom_col(width = 1, color = "white")
# View the plot
# Convert the coordinate system to polar
plot <- plot + coord_polar()
# View the plot
plot
plot <- ggplot(data.State,
aes(
x = States,
y = Frequences,
fill = States
)) +
geom_col(width = 1, color = "white")
# View the plot
# Convert the coordinate system to polar
plot <- plot + coord_polar()
# View the plot
plot
# # Top 5 des etats ayant un total de morts plus élevé
data.State <-  mapdata%>% group_by(mapdata$state)%>% summarise(Frequences=n())
data.State <- data.State[order(data.State$Frequences,decreasing = TRUE),]
# Circumplex (Polar Bar)
ggplot(data.State,aes(x = States, y = Frequences,fill = States)) +
geom_col(width = 1, color = "white") + coord_polar()
plot <-
plot <- ggplot(data.State,aes(x = States, y = Frequences,fill = States)) +
geom_col(width = 1, color = "white") + coord_polar()
# Circumplex (Polar Bar)
plot
plot <- ggplot(data.State,aes(x = States, y = Frequences,fill = States)) +
geom_col(width = 1, color = "white")
# View the plot
# Convert the coordinate system to polar
plot <- plot + coord_polar()
# View the plot
plot
Frequences
plot <- ggplot(data.State,
aes(
x = States,
y = Frequences,
fill = Frequences
)) +
geom_col(width = 1, color = "white")
# View the plot
# Convert the coordinate system to polar
plot <- plot + coord_polar()
# View the plot
plot
data.State
plot <- ggplot(data.State,
aes(
x = States,
y = Frequences,
fill = Frequences
)) +
geom_col(width = 1, color = "white")
# View the plot
# Convert the coordinate system to polar
plot <- plot + coord_polar()
# View the plot
plot
# # Top 5 des etats ayant un total de morts plus élevé
data.State <-  mapdata%>% group_by(mapdata$state)%>% summarise(Frequences=n())
data.State <- data.State[order(data.State$Frequences,decreasing = TRUE),]
colnames(data.State) <- c("States","Frequences")
data.State <- head(data.State,n=5)
data.State
plot <- ggplot(data.State,
aes(
x = States,
y = Frequences,
fill = Frequences
)) +
geom_col(width = 1, color = "white")
# View the plot
# Convert the coordinate system to polar
plot <- plot + coord_polar()
# View the plot
plot
ggplot(data.State, aes(x = States,y = Frequences,fill = Frequences)) +
geom_col(width = 1, color = "white") + coord_polar()
ggplot(data.State, aes(x = States,y = Frequences,fill = Frequences)) +
geom_col(width = 1, color = "white") + coord_polar()
#Circumplex (Polar Bar)
ggplot(data.State, aes(x = States,y = Frequences,fill = factor(Frequences))) +
geom_col(width = 1, color = "white") + coord_polar()
#Circumplex (Polar Bar)
ggplot(data.State, aes(x = States,y = Frequences,fill = factor(Frequences))) +
geom_col(width = 1, color = "white") + coord_polar() + theme_minimal() +
# Remove legend, axes, text, and tick marks
theme(
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 12)
)
data.State
#Diverging bar
ggplot(data.Gender, aes(x=Gender, y=Frequences, label=Gender)) +
geom_bar(stat='identity', aes(fill=Frequences), width=.5)  +
labs(subtitle="",
title= " Frequence de meutres par sexes") +
coord_flip()
# Frequence des armes les plus utilisées pour les meurtres
data.Armed <-  mapdata%>% group_by(mapdata$armed)%>% summarise(Frequences=n())
data.Armed
# Top 5 des armes les plus utilisées pour les meurtres
data.Armed <-  mapdata%>% group_by(mapdata$armed)%>% summarise(Frequences=n())
data.Armed <- data.Armed[order(data.Armed$Frequences,decreasing = TRUE),]
data.Armed
# Top 7 des armes les plus utilisées pour les meurtres
data.Armed <-  mapdata%>% group_by(mapdata$armed)%>% summarise(Frequences=n())
data.Armed <- data.Armed[order(data.Armed$Frequences,decreasing = TRUE),]
colnames(data.Armed) <- c("Armed","Frequences")
data.Armed <- head(data.Armed,n=7)
data.Armed
data.Armed$Armed[6] <- "undetermined"
data.Armed
# Top 5 des armes les plus utilisées pour les meurtres
data.Armed <-  mapdata%>% group_by(mapdata$armed)%>% summarise(Frequences=n())
data.Armed <- data.Armed[order(data.Armed$Frequences,decreasing = TRUE),]
colnames(data.Armed) <- c("Armed","Frequences")
data.Armed <- head(data.Armed,n=5)
data.Armed$Armed[6] <- "undetermined"
# Top 5 des armes les plus utilisées pour les meurtres
data.Armed <-  mapdata%>% group_by(mapdata$armed)%>% summarise(Frequences=n())
data.Armed <- data.Armed[order(data.Armed$Frequences,decreasing = TRUE),]
colnames(data.Armed) <- c("Armed","Frequences")
data.Armed <- head(data.Armed,n=5)
#data.Armed$Armed[6] <- "undetermined"
data.Armed
ggplot(data = data.Armed, aes(x = Armed,y = Frequences,colour = Armed))  + geom_point(size = 2.5) + geom_line(aes(y = Frequences))
Yes
data.Armed$Armed[3] <- "bare hands"
data.Armed
ggplot(data = data.Armed, aes(x = Armed,y = Frequences,colour = Armed))  + geom_point(size = 2.5) + geom_line(aes(y = Frequences))
ggplot(data = data.Armed, aes(x = Armed,y = Frequences,colour = Armed))  +
geom_point(size = 2.5) + geom_line(aes(y = Frequences),title="Top 5")
#Grid Table
grid.table(avg_by_years)
ggplot(data_df, aes(x = Years, y = DeathsNumber)) +
geom_segment(aes(x = data_df$Years, xend = data_df$Years, y = 0, yend = data_df$DeathsNumber)) +
geom_point()
ggplot(data_df, aes(x = Years, y = DeathsNumber)) +
geom_segment(aes(x = data_df$Years, xend = data_df$Years, y = 0, yend = data_df$DeathsNumber)) +
geom_point(size = 4, pch = 21, bg = 4, col = 1) +
coord_flip()
ggplot(data_df, aes(x = Years, y = DeathsNumber)) +
geom_segment(aes(x = data_df$Years, xend = data_df$Years, y = 0, yend = data_df$DeathsNumber)) +
geom_point()
most_recurrent_police_death_cause_df <- data.frame(Tools=PoliceDeaths_cleaned$cause_short)
head(most_recurrent_police_death_cause_df)
policeDeath_tbl <- table(most_recurrent_police_death_cause_df)
policeDeath_tbl
policeDeathCause_df <- data.frame(policeDeath_tbl)
policeDeathCause_df
colnames(policeDeathCause_df)  <- c("Causes","Frequences")
head(policeDeathCause_df)
most_reccurents <- policeDeathCause_df[order(policeDeathCause_df$Frequences, decreasing = TRUE), ]
most_reccurents
MostRecurrentsPoliceDeathCause_df <- head(most_reccurents, n=3)
MostRecurrentsPoliceDeathCause_df
hsize <- 4
df <- MostRecurrentsPoliceDeathCause_df %>% mutate(x = hsize)
df
ggplot(df, aes(x = hsize, y =Frequences, fill = Causes)) +geom_col() +geom_text(aes(label = paste0(round(Frequences/sum(Frequences) * 100, 2), "% (",Causes,")")), position = position_stack(vjust = 0.5)) +coord_polar(theta = "y") +xlim(c(0.2, hsize + 0.5))
#Graph
pie3D(MostRecurrentsPeopleDeathCause_df$Frequences,col = hcl.colors(length(MostRecurrentsPeopleDeathCause_df$Frequences), "Spectral")
,labels = lab , main="Most Recurrents People Death Causes")
# 3 Types de mort les plus récurrentes des populations
most_recurrent_people_death_manner_df <- data.frame(Tools=WashingtonPostDatabase_cleaned$manner_of_death)
head(most_recurrent_people_death_manner_df)
peopleDeath_tbl <- table(most_recurrent_people_death_manner_df)
peopleDeath_tbl
peopleDeathCause_df <- data.frame(peopleDeath_tbl)
peopleDeathCause_df
colnames(peopleDeathCause_df)  <- c("Causes","Frequences")
head(peopleDeathCause_df)
most_reccurents <- peopleDeathCause_df[order(peopleDeathCause_df$Frequences, decreasing = TRUE), ]
MostRecurrentsPeopleDeathCause_df <- head(most_reccurents, n=3)
lab <- paste0(round(most_reccurents$Frequences/sum(most_reccurents$Frequences) * 100, 2), "% (",MostRecurrentsPeopleDeathCause_df$Causes,")")
lab <- head(lab)
lab
#Resultat
MostRecurrentsPeopleDeathCause_df
#Graph
pie3D(MostRecurrentsPeopleDeathCause_df$Frequences,col = hcl.colors(length(MostRecurrentsPeopleDeathCause_df$Frequences), "Spectral")
,labels = lab , main="Most Recurrents People Death Causes")
# 4- Moyenne des attaques ces dernières anneés (Entre 2016 et 2021)
data_moy_attaques_df <- data.frame(Years=format(as.POSIXct(WashingtonPostDatabase_cleaned$date, format = "%Y"), format="%Y"),ThreatsLevels=WashingtonPostDatabase$threat_level)
data_moy_attaques_df <-  data_moy_attaques_df%>% group_by(data_moy_attaques_df$Years)%>% summarise(freq=n())
colnames(data_moy_attaques_df) <- c("Years","Frequences")
head(data_moy_attaques_df)
tail(data_moy_attaques_df)
avg_by_years <- data.frame(Average.attacks.2016.2021=mean(data_moy_attaques_df$Frequences))
head(avg_by_years)
tail(avg_by_years)
#Grid Table
grid.table(avg_by_years)
data.Races <- head(data.Races,n=4)
colnames(data.Races) <- c("Races","Frequences")
theme_set(theme_classic())
# Barchart
g <- ggplot(data.Races, aes(Races, Frequences))
g + geom_bar(stat="identity", width = 0.5, fill="tomato2") +
labs(title="Les races regulièrement victimes de meurtres",
subtitle="",
caption="") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
data.Races
# 6 Frequence de meutres par sexes
data.Gender <-  mapdata%>% group_by(mapdata$Gender)%>% summarise(Frequences=n())
data.Gender <- data.Gender[order(data.Gender$Frequences,decreasing = TRUE),]
colnames(data.Gender) <- c("Gender","Frequences")
data.Gender$Gender[3] <- "Others"
data.Gender
theme_set(theme_bw())
#Diverging bar
ggplot(data.Gender, aes(x=Gender, y=Frequences, label=Gender)) +
geom_bar(stat='identity', aes(fill=Frequences), width=.5)  +
labs(subtitle="",
title= " Frequence de meutres par sexes") +
coord_flip()
data.Gender
# 7 Top 5 des etats ayant un total de morts plus élevé
data.State <-  mapdata%>% group_by(mapdata$state)%>% summarise(Frequences=n())
data.State <- data.State[order(data.State$Frequences,decreasing = TRUE),]
colnames(data.State) <- c("States","Frequences")
data.State <- head(data.State,n=5)
data.State
#Circumplex (Polar Bar)
ggplot(data.State, aes(x = States,y = Frequences,fill = factor(Frequences))) +
geom_col(width = 1, color = "white") + coord_polar() + theme_minimal() +
# Remove legend, axes, text, and tick marks
theme(
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 12)
)
data.State
# 8 -Top 5 des armes les plus utilisées pour les meurtres
data.Armed <-  mapdata%>% group_by(mapdata$armed)%>% summarise(Frequences=n())
data.Armed <- data.Armed[order(data.Armed$Frequences,decreasing = TRUE),]
colnames(data.Armed) <- c("Armed","Frequences")
data.Armed <- head(data.Armed,n=5)
data.Armed$Armed[3] <- "bare hands"
data.Armed
ggplot(data = data.Armed, aes(x = Armed,y = Frequences,colour = Armed))  +
geom_point(size = 2.5) + geom_line(aes(y = Frequences))
